
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 212 100% 59%;
    --primary-foreground: 0 0% 98%;
    --secondary: 156 100% 50%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 156 100% 50%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 212 100% 59%;
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-dark text-foreground font-sans antialiased;
  }

  ::-webkit-scrollbar {
    width: 6px;
  }
  
  ::-webkit-scrollbar-track {
    @apply bg-dark;
  }
  
  ::-webkit-scrollbar-thumb {
    @apply bg-muted rounded-full;
  }

  /* Текстовый выбор */
  ::selection {
    @apply bg-neon-blue/25 text-white;
  }
}

@layer components {
  .neon-text-blue {
    @apply text-neon-blue drop-shadow-[0_0_5px_rgba(46,137,255,0.5)];
  }
  
  .neon-text-green {
    @apply text-neon-green drop-shadow-[0_0_5px_rgba(0,255,136,0.5)];
  }

  .neon-border {
    @apply border border-neon-blue shadow-[0_0_10px_rgba(46,137,255,0.3)];
  }

  .glass-card {
    @apply bg-black/20 backdrop-blur-md border border-white/10 rounded-lg;
  }

  .section-padding {
    @apply py-16 md:py-24;
  }

  .page-container {
    @apply container max-w-7xl mx-auto px-4 md:px-6;
  }

  .code-block {
    @apply font-mono bg-black/40 rounded-lg p-4 text-sm md:text-base;
  }
}

/* Counter для анимированных метрик */
.counter {
  counter-reset: count 0;
  animation: count-up 2s forwards ease-out;
}

@keyframes count-up {
  from {
    counter-reset: count 0;
  }
  to {
    counter-reset: count attr(data-target);
  }
}

.counter::after {
  content: counter(count);
}
